% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proc.cdf.R
\name{proc.cdf}
\alias{proc.cdf}
\title{Filter noise and detect peaks from LC/MS data in CDF format}
\usage{
proc.cdf(
  filename,
  min_presence = 0.5,
  min_elution_length = 12,
  mz_tol = 1e-05,
  baseline_correct = 0,
  baseline_correct_noise_percentile = 0.05,
  do.plot = FALSE,
  intensity_weighted = FALSE,
  cache = FALSE
)
}
\arguments{
\item{filename}{The CDF file name. If the file is not in the working directory, the path needs to be given.}

\item{min_presence}{Run filter parameter. The minimum proportion of presence in the time period for a series of 
signals grouped by m/z to be considered a peak.}

\item{min_elution_length}{Run filter parameter. The minimum length of elution time for a series of signals grouped by 
m/z to be considered a peak.}

\item{mz_tol}{m/z tolerance level for the grouping of data points. This value is expressed as the fraction of 
the m/z value. This value, multiplied by the m/z value, becomes the cutoff level. The recommended value is 
the machine's nominal accuracy level. Divide the ppm value by 1e6. For FTMS, 1e-5 is recommended.}

\item{baseline_correct}{After grouping the observations, the highest intensity in each group is found. If 
the highest is lower than this value, the entire group will be deleted. The default value is NA, in which 
case the program uses the 75th percentile of the height of the noise groups.}

\item{baseline_correct_noise_percentile}{The percentile of signal strength of those EIC that don't pass the 
run filter, to be used as the baseline threshold of signal strength.}

\item{do.plot}{Indicates whether plot should be drawn.}

\item{cache}{Whether to use cache}

\item{intensity.weighted}{Whether to use intensity to weight mass density estimation.}
}
\value{
A matrix with four columns: m/z value, retention time, intensity, and group number.
}
\description{
This function applies the run filter to remove noise. Data points are grouped into EICs in this step.
}
\examples{
proc.cdf(input_path, min_pres, min_run, tol, intensity.weighted = intensity_weighted)
}
